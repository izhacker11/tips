Tasks not completed!
Create a NetworkPolicy called 'restrict-inbound' in the 'alpha' namespace
Policy Type = 'Ingress'
Inbound access only allowed from the pod called 'middleware' with label 'app=middleware'
Inbound access only allowed to TCP port 80 on pods matching the policy

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-inbound
  namespace: alpha
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: middleware
  policyTypes:
  - Ingress


'alpha-pvc' should be bound to 'alpha-pv'. Delete and Re-create it if necessary.

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alpha-pvc
  namespace: alpha
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi
  volumeName: alpha-pv  


Expose the 'alpha-xyz' as a 'ClusterIP' type service called 'alpha-svc'
'alpha-svc' should be exposed on 'port: 80' and 'targetPort: 80'

---
apiVersion: v1
kind: Service
metadata:
  name: alpha-svc
  namespace: alpha
spec:

Create a deployment called 'alpha-xyz' that uses the image with the least 'CRITICAL' vulnerabilities? (Use the sample YAML file located at '/root/alpha-xyz.yaml' to create the deployment. Please make sure to use the same names and labels specified in this sample YAML file!)
Deployment has exactly '1' ready replica
'data-volume' is mounted at '/usr/share/nginx/html' on the pod

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: alpha-xyz
  name: alpha-xyz
  namespace: alpha
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpha-xyz
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: alpha-xyz
    spec:
      containers:
      - image: nginx:alpine
        name: nginx
      volumeMounts:
      - name: data-volume
        mountPath: /usr/share/nginx/html